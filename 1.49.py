# 题目描述
# 数学老师正在教授小畅和小游两人素数的概念。为了帮助巩固两人的知识，老师说出一个数，要求小游和小畅合作，每人说出一个素数，使得两人说出的素数的和刚好等于老师说出的数。
# 请编写程序计算两人说出的素数对的个数。如，老师说10，小畅和小游可以说出两对素数，分别为（5,5）和（3,7）（不考虑顺序）。
# 输入描述:
# 输入包括一个整数n,(3 ≤ n < 1000)
# 输出描述:
# 输出符合条件的素数对的个数
# 示例1
# 输入
#
# 10
# 输出
#
# 2
n = int(input())
count = 0


# prime_set = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103,
#              107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199,
#              211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331,
#              337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,
#              401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523,
#              541, 547, 557, 563, 569, 571, 577, 587, 593, 599,
#              601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733,
#              739, 743, 751, 757, 761, 769, 773, 787, 797,
#              809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941,
#              947, 953, 967, 971, 977, 983, 991, 997}
# for i in prime_set:
#     if n - i in prime_set and i <= n - i:
#         count += 1
# print(count)


def is_prime(num):
    for i in range(2, num):
        if num % i == 0:
            return False
    return True


for i in range(2, n // 2 + 1):
    if is_prime(i) and is_prime(n - i):
        count += 1

print(count)
